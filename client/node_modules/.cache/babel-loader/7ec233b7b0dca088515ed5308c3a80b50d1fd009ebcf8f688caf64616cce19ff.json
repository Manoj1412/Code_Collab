{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kukka\\\\OneDrive\\\\Pictures\\\\OneDrive\\\\Desktop\\\\Code_Collab\\\\client\\\\src\\\\components\\\\Editor\\\\Editor.js\",\n  _s = $RefreshSig$();\n/* global loadPyodide */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport Editor from '@monaco-editor/react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport Participants from './Participants';\nimport Chat from './Chat';\n\n// Helper for short room ID (use this in your room creation logic)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function generateRoomId() {\n  return Math.random().toString(36).substr(2, 6);\n}\nconst LANGUAGES = ['javascript', 'python', 'c', 'cpp', 'java', 'text'];\nconst CodeEditor = () => {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const location = useLocation();\n  // Store code for each language\n  const [codes, setCodes] = useState({\n    javascript: '// Start coding here',\n    python: '# Start coding here',\n    c: '/* Start coding here */',\n    cpp: '// Start coding here',\n    java: '// Start coding here',\n    text: ''\n  });\n  const [language, setLanguage] = useState('javascript');\n  const [theme, setTheme] = useState('dark');\n  const [participants, setParticipants] = useState([]);\n  const [cursors, setCursors] = useState({});\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [username, setUsername] = useState('');\n  const [avatarColor, setAvatarColor] = useState('');\n  const [output, setOutput] = useState('');\n  const [isRunning, setIsRunning] = useState(false);\n  const [pyodideLoaded, setPyodideLoaded] = useState(false);\n  const [pyodideInstance, setPyodideInstance] = useState(null);\n  const socketRef = useRef();\n  const editorRef = useRef();\n  const saveTimeoutRef = useRef();\n\n  // Get current code for selected language\n  const code = codes[language];\n  useEffect(() => {\n    document.documentElement.classList.toggle('dark', theme === 'dark');\n  }, [theme]);\n  useEffect(() => {\n    let isMounted = true;\n    async function loadPyodideScript() {\n      if (!window.loadPyodide) {\n        const script = document.createElement('script');\n        script.src = 'https://cdn.jsdelivr.net/pyodide/v0.23.4/full/pyodide.js';\n        script.async = true;\n        script.onerror = e => {\n          console.error('Pyodide script failed to load:', e);\n          setOutput('Pyodide script failed to load. Check your network, CDN access, or browser extensions.');\n        };\n        script.onload = async () => {\n          if (window.loadPyodide) {\n            try {\n              const pyodide = await window.loadPyodide({\n                indexURL: 'https://cdn.jsdelivr.net/pyodide/v0.23.4/full/'\n              });\n              if (isMounted) {\n                setPyodideInstance(pyodide);\n                setPyodideLoaded(true);\n              }\n            } catch (err) {\n              console.error('Pyodide failed to initialize:', err);\n              setOutput('Pyodide failed to initialize.');\n            }\n          } else {\n            setOutput('Pyodide global not found after script load.');\n          }\n        };\n        document.head.appendChild(script);\n      } else {\n        try {\n          const pyodide = await window.loadPyodide({\n            indexURL: 'https://cdn.jsdelivr.net/pyodide/v0.23.4/full/'\n          });\n          setPyodideInstance(pyodide);\n          setPyodideLoaded(true);\n        } catch (err) {\n          console.error('Pyodide failed to initialize:', err);\n          setOutput('Pyodide failed to initialize.');\n        }\n      }\n    }\n    loadPyodideScript();\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  useEffect(() => {\n    const state = location.state;\n    let cleanup;\n    try {\n      if (state && state.username && state.avatarColor) {\n        setUsername(state.username);\n        setAvatarColor(state.avatarColor);\n        cleanup = connectSocket(state.username, state.avatarColor);\n      } else {\n        const promptUsername = prompt('Enter your username:');\n        if (promptUsername) {\n          setUsername(promptUsername);\n          const colors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7', '#DDA0DD'];\n          const color = colors[Math.floor(Math.random() * colors.length)];\n          setAvatarColor(color);\n          cleanup = connectSocket(promptUsername, color);\n        }\n      }\n    } catch (err) {\n      console.error('Failed to initialize editor:', err);\n      alert('Failed to connect to the room. Please check if the server is running on port 5000 and try again.');\n    }\n    return cleanup || (() => {});\n  }, [roomId, location]);\n  const connectSocket = (user, color) => {\n    try {\n      const socket = io('http://localhost:5000');\n      socketRef.current = socket;\n      socket.emit('join-room', {\n        roomId,\n        username: user,\n        avatarColor: color\n      });\n      socket.on('room-joined', data => {\n        try {\n          // Expect data.codes to be an object with language keys\n          if (data.codes) setCodes(data.codes);\n          setLanguage(data.language || 'javascript');\n          setParticipants(data.participants);\n        } catch (e) {\n          console.error('Error handling room-joined:', e);\n        }\n      });\n      socket.on('code-updated', data => {\n        try {\n          // Expect data.language and data.code\n          setCodes(prev => ({\n            ...prev,\n            [data.language]: data.code\n          }));\n        } catch (e) {\n          console.error('Error handling code-updated:', e);\n        }\n      });\n      socket.on('cursor-moved', data => {\n        try {\n          setCursors(prev => ({\n            ...prev,\n            [data.socketId]: data\n          }));\n        } catch (e) {\n          console.error('Error handling cursor-moved:', e);\n        }\n      });\n      socket.on('user-joined', data => {\n        try {\n          setParticipants(prev => [...prev, data]);\n        } catch (e) {\n          console.error('Error handling user-joined:', e);\n        }\n      });\n      socket.on('user-left', data => {\n        try {\n          setParticipants(prev => prev.filter(p => p.socketId !== data.socketId));\n          setCursors(prev => {\n            const newCursors = {\n              ...prev\n            };\n            delete newCursors[data.socketId];\n            return newCursors;\n          });\n        } catch (e) {\n          console.error('Error handling user-left:', e);\n        }\n      });\n      socket.on('user-typing', data => {\n        try {\n          setTypingUsers(prev => [...prev, data.socketId]);\n        } catch (e) {\n          console.error('Error handling user-typing:', e);\n        }\n      });\n      socket.on('user-stopped-typing', data => {\n        try {\n          setTypingUsers(prev => prev.filter(id => id !== data.socketId));\n        } catch (e) {\n          console.error('Error handling user-stopped-typing:', e);\n        }\n      });\n      socket.on('error', data => {\n        try {\n          console.error('Socket error:', data.message);\n          alert('Connection error: ' + data.message);\n        } catch (e) {\n          console.error('Error in error handler:', e);\n        }\n      });\n      socket.on('connect_error', err => {\n        try {\n          console.error('Connection error:', err);\n          alert('Failed to connect to server: ' + err.message + '. Please ensure the server is running on port 5000.');\n        } catch (e) {\n          console.error('Error in connect_error handler:', e);\n        }\n      });\n      return () => {\n        if (socketRef.current) {\n          socketRef.current.emit('leave-room');\n          socketRef.current.disconnect();\n        }\n      };\n    } catch (err) {\n      console.error('Failed to create socket connection:', err);\n      alert('Failed to establish real-time connection. You can still edit locally, but collaboration features may not work.');\n      return () => {};\n    }\n  };\n  const handleEditorDidMount = (editor, monaco) => {\n    editorRef.current = editor;\n    monaco.editor.defineTheme('custom-light', {\n      base: 'vs',\n      inherit: true,\n      rules: [],\n      colors: {\n        'editor.background': '#f3f4f6'\n      }\n    });\n    monaco.editor.defineTheme('custom-dark', {\n      base: 'vs-dark',\n      inherit: true,\n      rules: [],\n      colors: {\n        'editor.background': '#1e1e1e',\n        'editor.foreground': '#d4d4d4'\n      }\n    });\n    monaco.editor.setTheme(theme === 'dark' ? 'custom-dark' : 'custom-light');\n  };\n  const toggleTheme = () => {\n    setTheme(prev => prev === 'light' ? 'dark' : 'light');\n  };\n  const handleRunCode = async () => {\n    setIsRunning(true);\n    setOutput('');\n    try {\n      if (language === 'javascript') {\n        const oldLog = console.log;\n        const oldError = console.error;\n        let logs = [];\n        console.log = (...args) => {\n          logs.push(args.map(a => typeof a === 'object' ? JSON.stringify(a) : String(a)).join(' '));\n          oldLog.apply(console, args);\n        };\n        console.error = (...args) => {\n          logs.push('Error: ' + args.map(a => typeof a === 'object' ? JSON.stringify(a) : String(a)).join(' '));\n          oldError.apply(console, args);\n        };\n        try {\n          new Function(code)();\n          setOutput(logs.join('\\n') || 'Execution completed (no output).');\n        } catch (e) {\n          setOutput('Error: ' + e.message);\n        } finally {\n          console.log = oldLog;\n          console.error = oldError;\n        }\n      } else if (language === 'python') {\n        if (!pyodideLoaded || !pyodideInstance) {\n          setOutput('Pyodide is loading... Please wait and try again.');\n          return;\n        }\n        try {\n          pyodideInstance.runPython(`\nimport sys\nfrom io import StringIO\nsys.stdout = mystdout = StringIO()\n`);\n          pyodideInstance.runPython(code);\n          const result = pyodideInstance.runPython('mystdout.getvalue()');\n          setOutput(result ? String(result) : 'Execution completed (no output).');\n        } catch (e) {\n          setOutput('Error: ' + e.message);\n        }\n      } else if (language === 'text') {\n        setOutput(code || 'No text entered.');\n      } else {\n        // C, C++, Java - send to backend\n        const response = await axios.post('http://localhost:5000/api/execute', {\n          language,\n          code\n        });\n        if (response.data.output) {\n          setOutput(response.data.output);\n        }\n        if (response.data.error) {\n          setOutput('Error: ' + response.data.error);\n        }\n      }\n    } catch (err) {\n      setOutput('Error: ' + err.message);\n    } finally {\n      setIsRunning(false);\n    }\n  };\n\n  // When language changes, show code for that language\n  const handleLanguageChange = e => {\n    setLanguage(e.target.value);\n    setOutput(''); // Clear output when switching language\n  };\n  const handleCodeChange = value => {\n    setCodes(prev => ({\n      ...prev,\n      [language]: value\n    }));\n    if (socketRef.current) {\n      socketRef.current.emit('code-change', {\n        roomId,\n        language,\n        code: value,\n        timestamp: Date.now()\n      });\n      // Auto-save every 30 seconds\n      if (saveTimeoutRef.current) clearTimeout(saveTimeoutRef.current);\n      saveTimeoutRef.current = setTimeout(() => {\n        socketRef.current.emit('save-snapshot', {\n          roomId,\n          codes\n        });\n      }, 30000);\n    }\n  };\n  const handleCursorChange = e => {\n    if (socketRef.current && e) {\n      socketRef.current.emit('cursor-update', {\n        roomId,\n        position: e.position,\n        selection: e.selection\n      });\n    }\n  };\n  const handleTypingStart = () => {\n    if (socketRef.current) {\n      socketRef.current.emit('typing-start', {\n        roomId\n      });\n    }\n  };\n  const handleTypingStop = () => {\n    if (socketRef.current) {\n      socketRef.current.emit('typing-stop', {\n        roomId\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `h-screen flex flex-col ${theme === 'dark' ? 'bg-gray-900' : 'bg-gray-100'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: `shadow px-4 py-2 flex justify-between items-center ${theme === 'dark' ? 'bg-gray-800 text-white' : 'bg-white'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl font-bold\",\n        children: [\"Room: \", roomId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleTheme,\n          className: \"px-3 py-1 bg-gray-200 dark:bg-gray-700 rounded text-sm\",\n          children: [theme === 'dark' ? 'Light' : 'Dark', \" Mode\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleRunCode,\n          disabled: isRunning,\n          className: \"px-3 py-1 bg-green-500 text-white rounded text-sm hover:bg-green-600 disabled:opacity-50\",\n          children: isRunning ? 'Running...' : 'Run'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: language,\n          onChange: handleLanguageChange,\n          className: \"border rounded px-2 py-1 dark:bg-gray-700 dark:border-gray-600\",\n          children: LANGUAGES.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: lang,\n            children: lang.charAt(0).toUpperCase() + lang.slice(1)\n          }, lang, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Participants, {\n          participants: participants\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1 overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex flex-col relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 relative\",\n          children: [/*#__PURE__*/_jsxDEV(Editor, {\n            height: \"70vh\",\n            language: language === 'text' ? 'plaintext' : language,\n            value: code,\n            onChange: handleCodeChange,\n            onMount: handleEditorDidMount,\n            theme: theme === 'dark' ? 'vs-dark' : 'vs',\n            options: {\n              minimap: {\n                enabled: false\n              },\n              fontSize: 14,\n              lineNumbers: 'on',\n              roundedSelection: false,\n              scrollBeyondLastLine: false,\n              automaticLayout: true\n            },\n            onMouseDown: handleTypingStart,\n            onKeyDown: handleTypingStart,\n            onKeyUp: handleTypingStop,\n            onMouseUp: handleTypingStop\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this), typingUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `absolute top-2 right-2 px-2 py-1 rounded text-sm ${theme === 'dark' ? 'bg-yellow-800 text-yellow-200' : 'bg-yellow-200'}`,\n            children: [typingUsers.length, \" user(s) typing...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `h-[30vh] p-4 overflow-y-auto border-t ${theme === 'dark' ? 'bg-gray-800 border-gray-600 text-white' : 'bg-gray-100 border-gray-300 text-gray-800'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold mb-2\",\n            children: \"Output:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"whitespace-pre-wrap text-xs\",\n            children: output || 'Click Run to see output here...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chat, {\n        socket: socketRef.current,\n        roomId: roomId,\n        username: username,\n        theme: theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 365,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeEditor, \"RRVSSGY7ru4YcEihV5i7a5k3XSw=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = CodeEditor;\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useParams","useLocation","Editor","io","axios","Participants","Chat","jsxDEV","_jsxDEV","generateRoomId","Math","random","toString","substr","LANGUAGES","CodeEditor","_s","roomId","location","codes","setCodes","javascript","python","c","cpp","java","text","language","setLanguage","theme","setTheme","participants","setParticipants","cursors","setCursors","typingUsers","setTypingUsers","username","setUsername","avatarColor","setAvatarColor","output","setOutput","isRunning","setIsRunning","pyodideLoaded","setPyodideLoaded","pyodideInstance","setPyodideInstance","socketRef","editorRef","saveTimeoutRef","code","document","documentElement","classList","toggle","isMounted","loadPyodideScript","window","loadPyodide","script","createElement","src","async","onerror","e","console","error","onload","pyodide","indexURL","err","head","appendChild","state","cleanup","connectSocket","promptUsername","prompt","colors","color","floor","length","alert","user","socket","current","emit","on","data","prev","socketId","filter","p","newCursors","id","message","disconnect","handleEditorDidMount","editor","monaco","defineTheme","base","inherit","rules","toggleTheme","handleRunCode","oldLog","log","oldError","logs","args","push","map","a","JSON","stringify","String","join","apply","Function","runPython","result","response","post","handleLanguageChange","target","value","handleCodeChange","timestamp","Date","now","clearTimeout","setTimeout","handleCursorChange","position","selection","handleTypingStart","handleTypingStop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","disabled","onChange","lang","charAt","toUpperCase","slice","height","onMount","options","minimap","enabled","fontSize","lineNumbers","roundedSelection","scrollBeyondLastLine","automaticLayout","onMouseDown","onKeyDown","onKeyUp","onMouseUp","_c","$RefreshReg$"],"sources":["C:/Users/kukka/OneDrive/Pictures/OneDrive/Desktop/Code_Collab/client/src/components/Editor/Editor.js"],"sourcesContent":["/* global loadPyodide */\r\n\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport Editor from '@monaco-editor/react';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport Participants from './Participants';\r\nimport Chat from './Chat';\r\n\r\n// Helper for short room ID (use this in your room creation logic)\r\nexport function generateRoomId() {\r\n  return Math.random().toString(36).substr(2, 6);\r\n}\r\n\r\nconst LANGUAGES = ['javascript', 'python', 'c', 'cpp', 'java', 'text'];\r\n\r\nconst CodeEditor = () => {\r\n  const { roomId } = useParams();\r\n  const location = useLocation();\r\n  // Store code for each language\r\n  const [codes, setCodes] = useState({\r\n    javascript: '// Start coding here',\r\n    python: '# Start coding here',\r\n    c: '/* Start coding here */',\r\n    cpp: '// Start coding here',\r\n    java: '// Start coding here',\r\n    text: '',\r\n  });\r\n  const [language, setLanguage] = useState('javascript');\r\n  const [theme, setTheme] = useState('dark');\r\n  const [participants, setParticipants] = useState([]);\r\n  const [cursors, setCursors] = useState({});\r\n  const [typingUsers, setTypingUsers] = useState([]);\r\n  const [username, setUsername] = useState('');\r\n  const [avatarColor, setAvatarColor] = useState('');\r\n  const [output, setOutput] = useState('');\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [pyodideLoaded, setPyodideLoaded] = useState(false);\r\n  const [pyodideInstance, setPyodideInstance] = useState(null);\r\n  const socketRef = useRef();\r\n  const editorRef = useRef();\r\n  const saveTimeoutRef = useRef();\r\n\r\n  // Get current code for selected language\r\n  const code = codes[language];\r\n\r\n  useEffect(() => {\r\n    document.documentElement.classList.toggle('dark', theme === 'dark');\r\n  }, [theme]);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    async function loadPyodideScript() {\r\n      if (!window.loadPyodide) {\r\n        const script = document.createElement('script');\r\n        script.src = 'https://cdn.jsdelivr.net/pyodide/v0.23.4/full/pyodide.js';\r\n        script.async = true;\r\n        script.onerror = (e) => {\r\n          console.error('Pyodide script failed to load:', e);\r\n          setOutput('Pyodide script failed to load. Check your network, CDN access, or browser extensions.');\r\n        };\r\n        script.onload = async () => {\r\n          if (window.loadPyodide) {\r\n            try {\r\n              const pyodide = await window.loadPyodide({ indexURL: 'https://cdn.jsdelivr.net/pyodide/v0.23.4/full/' });\r\n              if (isMounted) {\r\n                setPyodideInstance(pyodide);\r\n                setPyodideLoaded(true);\r\n              }\r\n            } catch (err) {\r\n              console.error('Pyodide failed to initialize:', err);\r\n              setOutput('Pyodide failed to initialize.');\r\n            }\r\n          } else {\r\n            setOutput('Pyodide global not found after script load.');\r\n          }\r\n        };\r\n        document.head.appendChild(script);\r\n      } else {\r\n        try {\r\n          const pyodide = await window.loadPyodide({ indexURL: 'https://cdn.jsdelivr.net/pyodide/v0.23.4/full/' });\r\n          setPyodideInstance(pyodide);\r\n          setPyodideLoaded(true);\r\n        } catch (err) {\r\n          console.error('Pyodide failed to initialize:', err);\r\n          setOutput('Pyodide failed to initialize.');\r\n        }\r\n      }\r\n    }\r\n    loadPyodideScript();\r\n    return () => { isMounted = false; };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const state = location.state;\r\n    let cleanup;\r\n    try {\r\n      if (state && state.username && state.avatarColor) {\r\n        setUsername(state.username);\r\n        setAvatarColor(state.avatarColor);\r\n        cleanup = connectSocket(state.username, state.avatarColor);\r\n      } else {\r\n        const promptUsername = prompt('Enter your username:');\r\n        if (promptUsername) {\r\n          setUsername(promptUsername);\r\n          const colors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7', '#DDA0DD'];\r\n          const color = colors[Math.floor(Math.random() * colors.length)];\r\n          setAvatarColor(color);\r\n          cleanup = connectSocket(promptUsername, color);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to initialize editor:', err);\r\n      alert('Failed to connect to the room. Please check if the server is running on port 5000 and try again.');\r\n    }\r\n    return cleanup || (() => {});\r\n  }, [roomId, location]);\r\n\r\n  const connectSocket = (user, color) => {\r\n    try {\r\n      const socket = io('http://localhost:5000');\r\n      socketRef.current = socket;\r\n\r\n      socket.emit('join-room', {\r\n        roomId,\r\n        username: user,\r\n        avatarColor: color\r\n      });\r\n\r\n      socket.on('room-joined', (data) => {\r\n        try {\r\n          // Expect data.codes to be an object with language keys\r\n          if (data.codes) setCodes(data.codes);\r\n          setLanguage(data.language || 'javascript');\r\n          setParticipants(data.participants);\r\n        } catch (e) {\r\n          console.error('Error handling room-joined:', e);\r\n        }\r\n      });\r\n\r\n      socket.on('code-updated', (data) => {\r\n        try {\r\n          // Expect data.language and data.code\r\n          setCodes(prev => ({\r\n            ...prev,\r\n            [data.language]: data.code\r\n          }));\r\n        } catch (e) {\r\n          console.error('Error handling code-updated:', e);\r\n        }\r\n      });\r\n\r\n      socket.on('cursor-moved', (data) => {\r\n        try {\r\n          setCursors(prev => ({ ...prev, [data.socketId]: data }));\r\n        } catch (e) {\r\n          console.error('Error handling cursor-moved:', e);\r\n        }\r\n      });\r\n\r\n      socket.on('user-joined', (data) => {\r\n        try {\r\n          setParticipants(prev => [...prev, data]);\r\n        } catch (e) {\r\n          console.error('Error handling user-joined:', e);\r\n        }\r\n      });\r\n\r\n      socket.on('user-left', (data) => {\r\n        try {\r\n          setParticipants(prev => prev.filter(p => p.socketId !== data.socketId));\r\n          setCursors(prev => {\r\n            const newCursors = { ...prev };\r\n            delete newCursors[data.socketId];\r\n            return newCursors;\r\n          });\r\n        } catch (e) {\r\n          console.error('Error handling user-left:', e);\r\n        }\r\n      });\r\n\r\n      socket.on('user-typing', (data) => {\r\n        try {\r\n          setTypingUsers(prev => [...prev, data.socketId]);\r\n        } catch (e) {\r\n          console.error('Error handling user-typing:', e);\r\n        }\r\n      });\r\n\r\n      socket.on('user-stopped-typing', (data) => {\r\n        try {\r\n          setTypingUsers(prev => prev.filter(id => id !== data.socketId));\r\n        } catch (e) {\r\n          console.error('Error handling user-stopped-typing:', e);\r\n        }\r\n      });\r\n\r\n      socket.on('error', (data) => {\r\n        try {\r\n          console.error('Socket error:', data.message);\r\n          alert('Connection error: ' + data.message);\r\n        } catch (e) {\r\n          console.error('Error in error handler:', e);\r\n        }\r\n      });\r\n\r\n      socket.on('connect_error', (err) => {\r\n        try {\r\n          console.error('Connection error:', err);\r\n          alert('Failed to connect to server: ' + err.message + '. Please ensure the server is running on port 5000.');\r\n        } catch (e) {\r\n          console.error('Error in connect_error handler:', e);\r\n        }\r\n      });\r\n\r\n      return () => {\r\n        if (socketRef.current) {\r\n          socketRef.current.emit('leave-room');\r\n          socketRef.current.disconnect();\r\n        }\r\n      };\r\n    } catch (err) {\r\n      console.error('Failed to create socket connection:', err);\r\n      alert('Failed to establish real-time connection. You can still edit locally, but collaboration features may not work.');\r\n      return () => {};\r\n    }\r\n  };\r\n\r\n  const handleEditorDidMount = (editor, monaco) => {\r\n    editorRef.current = editor;\r\n    monaco.editor.defineTheme('custom-light', {\r\n      base: 'vs',\r\n      inherit: true,\r\n      rules: [],\r\n      colors: {\r\n        'editor.background': '#f3f4f6',\r\n      }\r\n    });\r\n    monaco.editor.defineTheme('custom-dark', {\r\n      base: 'vs-dark',\r\n      inherit: true,\r\n      rules: [],\r\n      colors: {\r\n        'editor.background': '#1e1e1e',\r\n        'editor.foreground': '#d4d4d4',\r\n      }\r\n    });\r\n    monaco.editor.setTheme(theme === 'dark' ? 'custom-dark' : 'custom-light');\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    setTheme(prev => prev === 'light' ? 'dark' : 'light');\r\n  };\r\n\r\n  const handleRunCode = async () => {\r\n    setIsRunning(true);\r\n    setOutput('');\r\n    try {\r\n      if (language === 'javascript') {\r\n        const oldLog = console.log;\r\n        const oldError = console.error;\r\n        let logs = [];\r\n        console.log = (...args) => {\r\n          logs.push(args.map(a => typeof a === 'object' ? JSON.stringify(a) : String(a)).join(' '));\r\n          oldLog.apply(console, args);\r\n        };\r\n        console.error = (...args) => {\r\n          logs.push('Error: ' + args.map(a => typeof a === 'object' ? JSON.stringify(a) : String(a)).join(' '));\r\n          oldError.apply(console, args);\r\n        };\r\n        try {\r\n          new Function(code)();\r\n          setOutput(logs.join('\\n') || 'Execution completed (no output).');\r\n        } catch (e) {\r\n          setOutput('Error: ' + e.message);\r\n        } finally {\r\n          console.log = oldLog;\r\n          console.error = oldError;\r\n        }\r\n      } else if (language === 'python') {\r\n        if (!pyodideLoaded || !pyodideInstance) {\r\n          setOutput('Pyodide is loading... Please wait and try again.');\r\n          return;\r\n        }\r\n        try {\r\n          pyodideInstance.runPython(`\r\nimport sys\r\nfrom io import StringIO\r\nsys.stdout = mystdout = StringIO()\r\n`);\r\n          pyodideInstance.runPython(code);\r\n          const result = pyodideInstance.runPython('mystdout.getvalue()');\r\n          setOutput(result ? String(result) : 'Execution completed (no output).');\r\n        } catch (e) {\r\n          setOutput('Error: ' + e.message);\r\n        }\r\n      } else if (language === 'text') {\r\n        setOutput(code || 'No text entered.');\r\n      } else {\r\n        // C, C++, Java - send to backend\r\n        const response = await axios.post('http://localhost:5000/api/execute', { language, code });\r\n        if (response.data.output) {\r\n          setOutput(response.data.output);\r\n        }\r\n        if (response.data.error) {\r\n          setOutput('Error: ' + response.data.error);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setOutput('Error: ' + err.message);\r\n    } finally {\r\n      setIsRunning(false);\r\n    }\r\n  };\r\n\r\n  // When language changes, show code for that language\r\n  const handleLanguageChange = (e) => {\r\n    setLanguage(e.target.value);\r\n    setOutput(''); // Clear output when switching language\r\n  };\r\n  const handleCodeChange = (value) => {\r\n    setCodes(prev => ({\r\n      ...prev,\r\n      [language]: value\r\n    }));\r\n    if (socketRef.current) {\r\n      socketRef.current.emit('code-change', {\r\n        roomId,\r\n        language,\r\n        code: value,\r\n        timestamp: Date.now()\r\n      });\r\n      // Auto-save every 30 seconds\r\n      if (saveTimeoutRef.current) clearTimeout(saveTimeoutRef.current);\r\n      saveTimeoutRef.current = setTimeout(() => {\r\n        socketRef.current.emit('save-snapshot', { roomId, codes });\r\n      }, 30000);\r\n    }\r\n  };\r\n\r\n  const handleCursorChange = (e) => {\r\n    if (socketRef.current && e) {\r\n      socketRef.current.emit('cursor-update', {\r\n        roomId,\r\n        position: e.position,\r\n        selection: e.selection\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleTypingStart = () => {\r\n    if (socketRef.current) {\r\n      socketRef.current.emit('typing-start', { roomId });\r\n    }\r\n  };\r\n\r\n  const handleTypingStop = () => {\r\n    if (socketRef.current) {\r\n      socketRef.current.emit('typing-stop', { roomId });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`h-screen flex flex-col ${theme === 'dark' ? 'bg-gray-900' : 'bg-gray-100'}`}>\r\n      <header className={`shadow px-4 py-2 flex justify-between items-center ${theme === 'dark' ? 'bg-gray-800 text-white' : 'bg-white'}`}>\r\n        <h1 className=\"text-xl font-bold\">Room: {roomId}</h1>\r\n        <div className=\"flex items-center space-x-4\">\r\n          <button\r\n            onClick={toggleTheme}\r\n            className=\"px-3 py-1 bg-gray-200 dark:bg-gray-700 rounded text-sm\"\r\n          >\r\n            {theme === 'dark' ? 'Light' : 'Dark'} Mode\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleRunCode}\r\n            disabled={isRunning}\r\n            className=\"px-3 py-1 bg-green-500 text-white rounded text-sm hover:bg-green-600 disabled:opacity-50\"\r\n          >\r\n            {isRunning ? 'Running...' : 'Run'}\r\n          </button>\r\n          <select\r\n            value={language}\r\n            onChange={handleLanguageChange}\r\n            className=\"border rounded px-2 py-1 dark:bg-gray-700 dark:border-gray-600\"\r\n          >\r\n            {LANGUAGES.map(lang => (\r\n              <option key={lang} value={lang}>\r\n                {lang.charAt(0).toUpperCase() + lang.slice(1)}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <Participants participants={participants} />\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"flex flex-1 overflow-hidden\">\r\n        <div className=\"flex-1 flex flex-col relative\">\r\n          <div className=\"flex-1 relative\">\r\n            <Editor\r\n              height=\"70vh\"\r\n              language={language === 'text' ? 'plaintext' : language}\r\n              value={code}\r\n              onChange={handleCodeChange}\r\n              onMount={handleEditorDidMount}\r\n              theme={theme === 'dark' ? 'vs-dark' : 'vs'}\r\n              options={{\r\n                minimap: { enabled: false },\r\n                fontSize: 14,\r\n                lineNumbers: 'on',\r\n                roundedSelection: false,\r\n                scrollBeyondLastLine: false,\r\n                automaticLayout: true,\r\n              }}\r\n              onMouseDown={handleTypingStart}\r\n              onKeyDown={handleTypingStart}\r\n              onKeyUp={handleTypingStop}\r\n              onMouseUp={handleTypingStop}\r\n            />\r\n            {typingUsers.length > 0 && (\r\n              <div className={`absolute top-2 right-2 px-2 py-1 rounded text-sm ${theme === 'dark' ? 'bg-yellow-800 text-yellow-200' : 'bg-yellow-200'}`}>\r\n                {typingUsers.length} user(s) typing...\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className={`h-[30vh] p-4 overflow-y-auto border-t ${\r\n            theme === 'dark'\r\n              ? 'bg-gray-800 border-gray-600 text-white'\r\n              : 'bg-gray-100 border-gray-300 text-gray-800'\r\n          }`}>\r\n            <h3 className=\"font-semibold mb-2\">Output:</h3>\r\n            <pre className=\"whitespace-pre-wrap text-xs\">{output || 'Click Run to see output here...'}</pre>\r\n          </div>\r\n        </div>\r\n        <Chat socket={socketRef.current} roomId={roomId} username={username} theme={theme} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}